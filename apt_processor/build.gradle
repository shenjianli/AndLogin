plugins {
    id 'java-library'
    id 'com.github.dcendents.android-maven'
}

group='com.github.HappyAndroid946'

dependencies {
//    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(path: ':apt_annotation')
    //AutoService会自动在META-INF文件夹下生成Processor配置信息文件，该文件里就是实现该服务接口的具体实现类。而当外部程序装配这个模块的时候，
    //就能通过该jar包META-INF/services/里的配置文件找到具体的实现类名，并装载实例化，完成模块的注入。
    //基于这样一个约定就能很好的找到服务接口的实现类，而不需要再代码里制定，方便快捷。
    api 'com.google.auto.service:auto-service:1.0-rc4'
    // AS-3.4.1+  gradle5.1.1-all+ 需要添加下面的
    annotationProcessor 'com.google.auto.service:auto-service:1.0-rc4'
    //JavaPoet是square推出的开源java代码生成框架，提供Java Api生成.java源文件。这个框架功能非常有用，
    // 我们可以很方便的使用它根据注解、数据库模式、协议格式等来对应生成代码。通过这种自动化生成代码的方式，
    // 可以让我们用更加简洁优雅的方式要替代繁琐冗杂的重复工作。
    api 'com.squareup:javapoet:1.10.0'
}
//中文乱码问题（错误：编码GBK不可映射字符）
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}